heat_template_version: 2021-04-16

description: Deployment of .NET minimal API with Octavia and Aodh

resources: 
  scaling_group:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 60
      min_size: 1
      max_size: 5
      resource:
        type: OS::Heat::ResourceGroup
        properties:
          count: 1
          resource_def:
            type: OS::Nova::Server
            properties:
              name: api-instance
              flavor: 2
              image: 4b53e9c6-a452-4386-9b07-89d1b59d7929
              networks:
                - network: 38957e22-fbc5-4f14-aeaa-47d8528f6cca
              security_groups:
                - default
              metadata: {"metering.server_group": {get_param: "OS::stack_id"}}
              
  lb_pool_member_http:
    type: OS::Octavia::PoolMember
    properties:
      pool: { get_resource: lb_pool_http }
      address: { list_join: ['', { get_attr: [scaling_group, resource.0, first_address] }] }
      protocol_port: 80
      subnet: 21e328f7-6b2e-4ae5-9008-ce450ed5f87d 

  lb_pool_member_grpc:
    type: OS::Octavia::PoolMember
    properties:
      pool: { get_resource: lb_pool_grpc }
      address: { list_join: ['', { get_attr: [scaling_group, resource.0, first_address] }] }
      protocol_port: 5002
      subnet: 21e328f7-6b2e-4ae5-9008-ce450ed5f87d

  scaling_policy_scaleup:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: scaling_group}
      cooldown: 60
      scaling_adjustment: 1

  scaling_policy_scaledown:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: scaling_group}
      cooldown: 60
      scaling_adjustment: -1

  cpu_alarm_high:
    type: OS::Aodh::GnocchiAggregationByResourcesAlarm
    properties:
      description: Scale up if CPU > 80%
      metric: cpu_util
      aggregation_method: mean
      granularity: 300
      evaluation_periods: 1
      threshold: 80
      resource_type: instance
      comparison_operator: gt
      alarm_actions:
        - {get_attr: [scaling_policy_scaleup, signal_url]}
      query:
        list_join:
          - ''
          - - {'=': {server_group: {get_param: "OS::stack_id"}}}
    depends_on: [scaling_policy_scaleup]

  cpu_alarm_low:
    type: OS::Aodh::GnocchiAggregationByResourcesAlarm
    properties:
      description: Scale down if CPU < 15% for 5 minutes
      metric: cpu_util
      aggregation_method: mean
      granularity: 300
      evaluation_periods: 1
      threshold: 15
      resource_type: instance
      comparison_operator: lt
      alarm_actions:
        - {get_attr: [scaling_policy_scaledown, signal_url]}
      query:
        list_join:
          - ''
          - - {'=': {server_group: {get_param: "OS::stack_id"}}}
    depends_on: [scaling_policy_scaledown]

  lb:
    type: OS::Octavia::LoadBalancer
    properties:
      vip_subnet: 21e328f7-6b2e-4ae5-9008-ce450ed5f87d
      name: api-load-balancer
      provider: amphora

  lb_listener_http:
    type: OS::Octavia::Listener
    properties:
      protocol: TCP
      protocol_port: 80
      loadbalancer: { get_resource: lb }

  lb_listener_grpc:
    type: OS::Octavia::Listener
    properties:
      protocol: TCP
      protocol_port: 5002
      loadbalancer: { get_resource: lb }

  lb_pool_http:
    type: OS::Octavia::Pool
    properties:
      lb_algorithm: ROUND_ROBIN
      listener: { get_resource: lb_listener_http }
      protocol: TCP

  lb_pool_grpc:
    type: OS::Octavia::Pool
    properties:
      lb_algorithm: ROUND_ROBIN
      listener: { get_resource: lb_listener_grpc }
      protocol: TCP


outputs:
  server_ip:
    description: IP Address of the load-balanced server.
    value: { get_attr: [scaling_group, resource.0, first_address] }

  scale_up_url:
    description: >
      This URL is the webhook to scale up the autoscaling group.  You
      can invoke the scale-up operation by doing an HTTP POST to this
      URL; no body nor extra headers are needed.
    value: {get_attr: [scaling_policy_scaleup, alarm_url]}

  scale_dn_url:
    description: >
      This URL is the webhook to scale down the autoscaling group.
      You can invoke the scale-down operation by doing an HTTP POST to
      this URL; no body nor extra headers are needed.
    value: {get_attr: [scaling_policy_scaledown, alarm_url]}

  gnocchi_query:
    value:
      str_replace:
        template: >
          gnocchi measures aggregation --resource-type instance
          --query 'server_group="stackval"'
          --granularity 300 --aggregation mean -m cpu_util
        params:
          stackval: { get_param: "OS::stack_id" }
    description: >
      This is a Gnocchi query for statistics on the cpu_util measurements about
      OS::Nova::Server instances in this stack. The --resource-type select the
      type of Gnocchi resource. The --query parameter filters resources
      according to its attributes.